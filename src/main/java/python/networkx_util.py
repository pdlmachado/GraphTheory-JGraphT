# -*- coding: utf-8 -*-
"""networkx-drawutil.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wU_THn-HUQeiGoGNr9JQ_35B3vOi-pLa

Este notebook contém funções para desenhar grafos.

O código pode ser importado em seu notebook usando o seguinte comando:

!wget https://raw.githubusercontent.com/pdlmachado/GraphTheory-JGraphT/master/src/main/java/python/networkx-drawutil.py

Testes para as funções encontram-se neste notebook:

(a definir)
"""

# Importando funções
import networkx as nx
import matplotlib.pyplot as plt

def draw_graph (G, pos, node_labels=None, edge_labels=None):
  nx.draw_networkx_nodes(G,pos, node_color="cyan", node_size=500)
  nx.draw_networkx_edges(G,pos)
  if node_labels is None:
    nx.draw_networkx_labels(G,pos)
  else:
    nx.draw_networkx_labels(G,pos,labels=node_labels)
  if edge_labels is None:
    pass
  else:
    nx.draw_networkx_edge_labels(G,pos,edge_labels=edge_labels)
  plt.box(False)
  plt.show()

def draw_multigraph(G,pos):
  nx.draw_networkx_nodes(G,pos, node_color="cyan", node_size=500)
  nx.draw_networkx_labels(G,pos)
  ax = plt.gca()
  for e in G.edges:
    if e[2] > 0:
      ax.annotate("",
                xy=pos[e[0]], xycoords='data',
                xytext=pos[e[1]], textcoords='data',
                arrowprops=dict(arrowstyle="-", color="black",
                                shrinkA=11, shrinkB=11,
                                patchA=None, patchB=None,
                                connectionstyle="arc3,rad=rrr".replace('rrr',str(0.3*e[2])),
                                ),
      )
  nx.draw_networkx_edges(G,pos,arrows=True,edgelist=[e for e in G.edges if e[2]==0])
  plt.axis(False)
  plt.show()
