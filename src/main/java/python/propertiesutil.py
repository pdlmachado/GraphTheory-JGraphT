# -*- coding: utf-8 -*-
"""propertiesutil.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LoA6XVNM5ToMQktcyZOqQkRALVwZIJ82

Este notebook contém funções que analisam propriedades gerais sobre grafos.

O código pode ser importado em seu notebook usando o seguinte comando:

!wget https://raw.githubusercontent.com/pdlmachado/GraphTheory-JGraphT/master/src/main/java/python/propertiesutil.py

Testes para as funções encontram-se neste notebook:
"""

# Se desejar compilar, descomente o(s) comando(s) abaixo
#!pip install jgrapht

#from jgrapht import create_graph

"""# is_null_graph"""

def is_null_graph (g):
  if g is None:
    return None
  else:
    return not any(g.vertices)

"""# is_acyclic"""

from jgrapht.algorithms.cycles import fundamental_cycle_basis_paton
def is_acyclic (g):
  if g is None:
    return None
  else:
    w,it = fundamental_cycle_basis_paton(g)
    if w == 0:
      return True
    else:
      return False

#from jgrapht.generators import star,ring_graph
#x = create_graph(directed=False)
#star(x,5)
#print(is_acyclic(x))
#y = create_graph(directed=False)
#ring_graph(y,5)
#print(is_acyclic(y))

"""# is_directed_acyclic"""

from jgrapht.algorithms.cycles import enumerate_simple_cycles_johnson
def is_directed_acyclic (g):
  if g is None:
    return None
  else:
    it = enumerate_simple_cycles_johnson(g)
    if not any(it):
      return True
    else:
      return False
      
#from jgrapht.generators import star,ring_graph
#x = create_graph(directed=True)
#star(x,5)
#print(is_directed_acyclic(x))
#y = create_graph(directed=True)
#ring_graph(y,5)
#print(is_directed_acyclic(y))